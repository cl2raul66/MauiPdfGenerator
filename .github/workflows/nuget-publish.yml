name: Publish NuGet Packages

on:
  push:
    branches: [ master ] 
    
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      sourcegen_changed: ${{ steps.changed-files-sourcegen.outputs.any_changed }}
      main_changed: ${{ steps.changed-files-main.outputs.any_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files for SourceGenerators
        id: changed-files-sourcegen
        uses: tj-actions/changed-files@v46 
        with:
          files: MauiPdfGenerator.SourceGenerators/**

      - name: Debug SourceGenerators changes
        if: always()
        run: |
          echo "SourceGen All Changed Files: ${{ steps.changed-files-sourcegen.outputs.all_changed_files }}"
          echo "SourceGen Any Changed: ${{ steps.changed-files-sourcegen.outputs.any_changed }}"

      - name: Get changed files for Main library
        id: changed-files-main
        uses: tj-actions/changed-files@v46 
        with:
          files: MauiPdfGenerator/**

      - name: Debug Main library changes
        if: always()
        run: |
          echo "Main All Changed Files: ${{ steps.changed-files-main.outputs.all_changed_files }}"
          echo "Main Any Changed: ${{ steps.changed-files-main.outputs.any_changed }}"

  # Trabajo para publicar MauiPdfGenerator.SourceGenerators
  publish-sourcegen:
    needs: detect-changes
    runs-on: windows-latest
    if: needs.detect-changes.outputs.sourcegen_changed == 'true'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore MauiPdfGenerator.SourceGenerators/MauiPdfGenerator.SourceGenerators.csproj
      
    - name: Build
      run: dotnet build MauiPdfGenerator.SourceGenerators/MauiPdfGenerator.SourceGenerators.csproj --configuration Release --no-restore
      
    - name: Pack SourceGenerators
      run: dotnet pack MauiPdfGenerator.SourceGenerators/MauiPdfGenerator.SourceGenerators.csproj --configuration Release --no-build --output ./nupkgs-sourcegen  # <--- CARPETA DE SALIDA ÚNICA
      
    - name: Check for nupkgs directory (SourceGen)
      if: always()
      run: |
        echo "Checking ./nupkgs-sourcegen for SourceGen:"
        Test-Path ./nupkgs-sourcegen
        Get-ChildItem ./nupkgs-sourcegen -Filter *.nupkg
      shell: pwsh

    - name: Publish SourceGenerators to NuGet
      run: |
        Get-ChildItem -Path ./nupkgs-sourcegen -Filter *.nupkg | ForEach-Object { # <--- USA LA CARPETA ÚNICA
          Write-Host "Pushing package: $($_.FullName)"
          dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
      shell: pwsh

  # Trabajo para publicar MauiPdfGenerator
  publish-main:
    needs: detect-changes
    runs-on: windows-latest
    if: needs.detect-changes.outputs.main_changed == 'true'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x # Asegúrate que esta es la versión de SDK que quieres
        
    - name: Restore dependencies
      run: dotnet restore MauiPdfGenerator/MauiPdfGenerator.csproj
      
    - name: Build
      run: dotnet build MauiPdfGenerator/MauiPdfGenerator.csproj --configuration Release --no-restore
      
    - name: Pack Main Library
      run: dotnet pack MauiPdfGenerator/MauiPdfGenerator.csproj --configuration Release --no-build --output ./nupkgs-main  # <--- CARPETA DE SALIDA ÚNICA
      
    - name: Check for nupkgs directory (Main)
      if: always()
      run: |
        echo "Checking ./nupkgs-main for Main:"
        Test-Path ./nupkgs-main
        Get-ChildItem ./nupkgs-main -Filter *.nupkg
      shell: pwsh

    - name: Publish Main Library to NuGet
      run: |
        Get-ChildItem -Path ./nupkgs-main -Filter *.nupkg | ForEach-Object { # <--- USA LA CARPETA ÚNICA
          Write-Host "Pushing package: $($_.FullName)"
          dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
      shell: pwsh
